---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wharf-helm.fullname" . }}-web
  labels:
    {{- include "wharf-helm.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.web.replicaCount }}
  selector:
    matchLabels:
      component: web
      {{- include "wharf-helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        component: web
        {{- include "wharf-helm.selectorLabels" . | nindent 8 }}
    spec:
      {{- with (.Values.web.imagePullSecrets | default .Values.imagePullSecrets) }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.podSecurityContext}}
      securityContext: {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "wharf-helm.serviceAccountName" . }}
      volumes:
        {{- with .Values.web.volumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        - name: {{ include "wharf-helm.fullname" . }}-web-config-volume
          configMap:
            name: {{ include "wharf-helm.fullname" . }}-web-config
      containers:
        - name: {{ printf "%s-web" .Chart.Name | quote }}
          {{- with .Values.web.containerSecurityContext}}
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ .Values.web.image | quote }}
          {{- with .Values.web.imagePullPolicy }}
          imagePullPolicy: {{ . | quote }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.web.containerPort }}
              protocol: TCP
          {{- with .Values.web.livenessProbe }}
          livenessProbe: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.web.readinessProbe }}
          readinessProbe: {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- with .Values.web.volumeMounts }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
            - name: {{ include "wharf-helm.fullname" . }}-web-config-volume
              mountPath: /usr/share/nginx/html/assets/config.json
              subPath: config.json
          {{- with .Values.web.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end}}
      {{- with .Values.web.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "wharf-helm.fullname" . }}-web
  labels:
    {{- include "wharf-helm.labels" . | nindent 4 }}
spec:
  type: {{ .Values.web.serviceType }}
  ports:
    - port: {{ .Values.web.servicePort }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    component: web
    {{- include "wharf-helm.selectorLabels" . | nindent 4 }}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ include "wharf-helm.fullname" . }}-web-config
data:
  config.json: |
    {
      "Environment":
      {
          "Name": {{ .Values.global.instanceId | quote }},
          "IsProduction": {{ .Values.global.isProduction }}
      },
      "UpdateLatency": 20000,
      "UpdateFrequency": 30000,
      {{- with $.Values.web.http.oidc }}
      "oidcConfig": {
          "authority": "{{ .authority }}",
          "redirectUrl": "{{ .redirectUrl }}",
          "postLogoutRedirectUri": "{{ .postLogoutRedirectUri }}",
          "clientId": "{{ .clientId }}",
          "scope": "{{ .scope }}",
          "logLevel": "{{ .logLevel }}",
          "useRefreshToken": {{ .useRefreshToken }},
          "silentRenew": {{ .silentRenew }},
          "responseType": "id_token token",
          "ignoreNonceAfterRefresh": {{ .ignoreNonceAfterRefresh }},
          "maxIdTokenIatOffsetAllowedInSeconds": {{ .maxIdTokenIatOffsetAllowedInSeconds }},
          "issValidationOff": false,
          "autoUserInfo": false
      },
      {{- end }}
      "BackendUrls": {
          "Api": "/api",
          "GitlabImport" : "/import",
          "GithubImport" : "/import",
          "AzureDevopsImport" : "/import"
      }

    }
