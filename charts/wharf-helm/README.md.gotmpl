# Wharf Helm chart

{{ template "chart.versionBadge" . }}
{{ template "chart.typeBadge" . }}

{{ template "chart.homepageLine" . }}

{{- $defaultValues := dict }}
{{- range .Values }}
  {{- $defaultValues = set $defaultValues (replace "." "_" .Key) .Default }}
{{- end }}

{{- define "wharf-helm.imageVersionBadge" }}
{{- $imageVersion := regexReplaceAll ".*:([\\w_+.-]+)[\"`]*" . "${1}" -}}
![Version: {{ $imageVersion }}](https://img.shields.io/badge/Version-{{ $imageVersion | replace "-" "--" }}-informational?style=flat-square)
{{- end }}

{{- define "wharf-helm.imageGitHubRepoLink" }}
{{- $gitHubRepo := regexReplaceAll "[\"`]*quay\\.io/(.*):.*" . "${1}" -}}
[{{ $gitHubRepo }}](https://github.com/{{ $gitHubRepo }})
{{- end }}

{{- define "wharf-helm.imageQuayIoRepo" -}}
https://quay.io/repository/{{- regexReplaceAll "[\"`]*quay\\.io/(.*):.*" . "${1}" }}
{{- end }}

{{- define "wharf-helm.imageColumns" }}
{{- template "wharf-helm.imageGitHubRepoLink" . }} | [{{ template "wharf-helm.imageVersionBadge" . }}]({{ template "wharf-helm.imageQuayIoRepo" . }}) | {{- . }}
{{- end }}

## Prerequisites

- Postgres database. Could be deployed anywhere, as long as Wharf can reach it.
  By default, it's expected on the host {{ $defaultValues.api_db_host }} and
  port {{ $defaultValues.api_db_port }}.

  To deploy it on "bare metal", we recommend going through their official
  documentation: <https://www.postgresql.org/docs/current/installation.html>

  To deploy in Kubernetes, you may use the [Bitnami's
  Postgres Helm chart](https://github.com/bitnami/charts/tree/master/bitnami/postgresql),
  [Zalando's Postgres operator](https://postgres-operator.readthedocs.io/en/latest/),
  or [KubeDB](https://kubedb.com/docs/latest/guides/postgres/), for example.

## Installing the Chart

To install the chart with the release name `my-release`:

```sh
helm repo add iver-wharf https://iver-wharf.github.io/wharf-helm
helm install my-release iver-wharf/wharf-helm
```

## Default images

| GitHub repository | Quay.io version | Image
| ----------------- | --------------- | -----
| {{ template "wharf-helm.imageColumns" $defaultValues.api_image }}
| {{ template "wharf-helm.imageColumns" $defaultValues.web_image }}
| {{ template "wharf-helm.imageColumns" $defaultValues.providers_github_image }}
| {{ template "wharf-helm.imageColumns" $defaultValues.providers_gitlab_image }}
| {{ template "wharf-helm.imageColumns" $defaultValues.providers_azuredevops_image }}

## Values

{{ range .Values }}
### `{{ .Key }}`

> {{ if .Description }}{{ .Description }}{{ else }}{{ .AutoDescription }}{{ end }}

*Type:* `{{ .Type }}`\
*Default:* {{ if .Default }}{{ .Default }}{{ else }}{{ .AutoDefault }}{{ end }}
{{ end }}

## Smart environment fields

This chart uses a trick to let you more consicely specify environment variable
values. Normally to specify a Kubernetes environment variable, you have a
setting such as:

```yaml
env:
  - name: "WHARF_DB_HOST"
    value: "my value"

  - name: "WHARF_DB_HOST"
    valueFrom:
      secretKeyRef:
        name: my-secret
        key: my-key-in-the-secret
```

Any setting that specifies it supports "Smart environment field", such as the
`api.db.host` setting, allows these values except the `name` field.

But there's also a shorthand. If the value of the setting is just simply a
`string`, then it translates to a `value: ...` setting.

The following three samples of setting `api.db.host` are all valid:

```yaml
api:
  db:
    host:
      value: "my value"
    # Would be added to the Pod's environment variables as:
    #env:
    #  - name: WHARF_DB_HOST
    #    value: "my value"

    host:
      valueFrom:
        secretKeyRef:
          name: my-secret
          key: my-key-in-the-secret
    # Would be added to the Pod's environment variables as:
    #env:
    #  - name: WHARF_DB_HOST
    #    valueFrom:
    #      secretKeyRef:
    #        name: my-secret
    #        key: my-key-in-the-secret

    host: "my value"
    # Would be added to the Pod's environment variables as:
    #env:
    #  - name: WHARF_DB_HOST
    #    value: "my value"
```

The object fields available, such as the `value` and `valueFrom`, can be found
over at: <https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables>

## Changes

See the [CHANGELOG.md](./CHANGELOG.md) file inside this Helm chart.

---

Maintained by [Iver](https://www.iver.com/en).
Licensed under the [MIT license](https://github.com/iver-wharf/wharf-helm/blob/master/LICENSE).
